version: "3.9"
services:
  mongo:
    image: mongo:latest
    ports:
      - '8080:27017'
    command: ["mongod", "--syslog"]
    
  redis:
    image: redis:latest

  auth: 
    build:
      context: ./auth
      dockerfile: Dockerfile
    env_file:
      - ./auth/.env
    environment: 
      - MONGO_URI=mongodb://mongo:27017/
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 2s
    depends_on:
      - mongo
      - redis
  
  # category: 
  #   build:
  #     context: ./category
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./category/.env
  #   environment: 
  #     - MONGO_URI=mongodb://mongo:27017/
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 1s
  #     restart_policy:
  #       condition: on-failure
  #       delay: 2s
  #   depends_on:
  #     - mongo
  #     - redis
  
  # chat: 
  #   build:
  #     context: ./chat
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./chat/.env
  #   environment: 
  #     - MONGO_URI=mongodb://mongo:27017/
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 1s
  #     restart_policy:
  #       condition: on-failure
  #       delay: 2s
  #   depends_on:
  #     - mongo
  #     - redis
  
  # portfolio-post: 
  #   build:
  #     context: ./portfolio-post
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./portfolio-post/.env
  #   environment: 
  #     - MONGO_URI=mongodb://mongo:27017/
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 1s
  #     restart_policy:
  #       condition: on-failure
  #       delay: 3s
  #   depends_on:
  #     - mongo
  #     - redis
  
  equipment-rental: 
    build:
      context: ./equipment-rental
      dockerfile: Dockerfile
    env_file:
      - ./equipment-rental/.env
    environment: 
      - MONGO_URI=mongodb://mongo:27017/
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 10s
    develop:
      watch:
        - action: sync+restart
          path: ./equipment-rental
          target: /app
          ignore:
            - node_modules/
            - package-lock.json
            - yarn.lock
    depends_on:
      - mongo
      - redis
      
  nginx:
    image: nginx:stable-alpine
    ports:
      - '3000:80'
    volumes:
      - ./nginx/equipment-rental.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth
      # - chat
      # - category
      # - portfolio-post
      - equipment-rental

